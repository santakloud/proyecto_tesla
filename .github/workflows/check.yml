name: Validar y mergea código

on:
  push:
    branches:
      - feature
      - develop

jobs:
  valida-y-mergea:
    runs-on: ubuntu-latest
    steps:
      - name: Clona el repositorio
        uses: actions/checkout@v3

      - name: Busca plantillas en equipos/
        id: find-templates
        run: |
          cd /workspaces/equipo
          for file in *; do
            if [[ $file =~ \.(template_bash|template_python|template_jenkinsfile) ]]; then
              template_type=$(basename "$file" | cut -d '.' -f 1)
              echo "Plantilla encontrada: ${template_type}"
            fi
          done

      - name: Comprueba estructura y extrae plantilla de equipo
        id: validate-and-extract-template
        run: |
          cd /workspaces/equipo
          for file in *; do
            if [[ $file =~ \.(template_bash|template_python|template_jenkinsfile) ]]; then
              template_type=$(basename "$file" | cut -d '.' -f 1)
              cat "$file" | yq e '.type' > temp.txt
              if [ ! -s temp.txt ]; then
                echo "Error: La plantilla no tiene el campo 'type'"
                exit 1
              fi
              template_value=$(cat temp.txt)
              rm temp.txt
            fi
          done

      - name: Comprueba la estructura con plantilla
        run: |
          temp=$(echo "$template_value" | jq '.')
          if echo "$temp" | jq -e '.type' != null; then
            echo "La plantilla es válida"
          else
            echo "La plantilla no es válida"
          fi

      - name: Muestra el resultado
        run: |
          echo "::log ${ Steps[validate-and-extract-template][result] }::"

      - name: Mergea al branch develop
        if: github.event.payload.pull_request.merge_state == 'merged'
        uses: actions/merge-request@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MERGE_REQUEST_TITLE: "Validación de código"
          MERGE_REQUEST_DESCRIPTION: "Validación de código para el equipo $1"

      - name: Mergea al branch main
        if: github.event.payload.pull_request.merge_state == 'merged'
        uses: actions/merge-request@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MERGE_REQUEST_TITLE: "Validación y merge a producción"
          MERGE_REQUEST_DESCRIPTION: "Validación de código para el equipo $1 en producción"

      - name: Verifica si el archivo JSON es válido
        uses: python@v3.8
        env:
          PYTHONPATH: ${{ artifacts.python }}
          script: |
            import jsonschema
            with open '${GITHUB_WORKSPACE}/.github/workflows/valida-y-mergea.yml', 'r' as f:
              schema = json.load(f)
            with open '${GITHUBeworkSPACE}/.github/workflows/valida-y-mergea.yml', 'r' as f:
              schema_str = f.read()
            try:
              jsonschema.validate(schema_str, schema)
              echo "El archivo JSON es válido"
            except jsonschema.exceptions.ValidationError as e:
              echo "El archivo JSON no es válido"
